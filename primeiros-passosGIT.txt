# üìò Documenta√ß√£o de Comandos do Git

---

## üõ†Ô∏è Comandos B√°sicos
- **`git init`**: Inicializa um novo reposit√≥rio Git no diret√≥rio atual.
- **`git clone <url>`**: Clona um reposit√≥rio remoto para o diret√≥rio local.
- **`git status`**: Exibe o status atual do reposit√≥rio, incluindo arquivos modificados e n√£o rastreados.
- **`git add <arquivo>`**: Adiciona um arquivo espec√≠fico √† √°rea de stage (prepara√ß√£o para commit).
- **`git add .`**: Adiciona todos os arquivos modificados √† √°rea de stage.
- **`git commit -m "<mensagem>"`**: Cria um commit com as altera√ß√µes na √°rea de stage e uma mensagem descritiva.
- **`git log`**: Exibe o hist√≥rico de commits do reposit√≥rio.

---

## üåø Trabalhando com Branches
- **`git branch`**: Lista todas as branches no reposit√≥rio.
- **`git branch <nome>`**: Cria uma nova branch com o nome especificado.
- **`git checkout <branch>`**: Alterna para a branch especificada.
- **`git checkout -b <branch>`**: Cria e alterna para uma nova branch.
- **`git merge <branch>`**: Mescla a branch especificada na branch atual.

---

## üåê Reposit√≥rios Remotos
- **`git remote add origin <url>`**: Adiciona um reposit√≥rio remoto com o nome "origin".
- **`git push -u origin <branch>`**: Envia as altera√ß√µes da branch especificada para o reposit√≥rio remoto.
- **`git pull`**: Puxa as altera√ß√µes do reposit√≥rio remoto para o local.

---

## üîß Outros Comandos √öteis
- **`git diff`**: Mostra as diferen√ßas entre os arquivos modificados e o √∫ltimo commit.
- **`git reset <arquivo>`**: Remove um arquivo da √°rea de stage.
- **`git stash`**: Salva temporariamente as altera√ß√µes n√£o commitadas para limpar o diret√≥rio de trabalho.
- **`git stash pop`**: Restaura as altera√ß√µes salvas com `git stash`.
- **`git tag <nome>`**: Cria uma tag no commit atual.